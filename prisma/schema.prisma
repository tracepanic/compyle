generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  emailVerified Boolean
  image         String?
  role          UserRole

  sessions      Session[]
  accounts      Account[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Session {
  id          String   @id @default(cuid())
  userId      String
  token       String   @unique
  expiresAt   DateTime
  ipAddress   String?
  userAgent   String?

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Account {
  id                     String   @id @default(cuid())
  userId                 String
  accountId              String
  providerId             String
  accessToken            String?
  refreshToken           String?
  accessTokenExpiresAt   DateTime?
  refreshTokenExpiresAt  DateTime?
  scope                  String?
  idToken                String?
  password               String?

  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@index([userId])
  @@index([providerId])
}

model Verification {
  id          String   @id @default(cuid())
  identifier  String
  value       String
  expiresAt   DateTime

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([identifier])
}
